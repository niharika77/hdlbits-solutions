//Create a 4-bit wide, 256-to-1 multiplexer. The 256 4-bit inputs are all packed into a single 1024-bit 
//input vector. sel=0 should select bits in[3:0], sel=1 selects bits in[7:4], sel=2 selects bits in[11:8], etc.

//Expected solution length: Around 1â€“5 lines.

module top_module( 
    input [1023:0] in,
    input [7:0] sel,
    output [3:0] out );
    
    reg [3:0] a [255:0];
    parameter width = 4;
    int i;
    always @(*)
        begin
            for(i = 0; i<256; i=i+1)
                begin: for_loop
                    a[i][0] = in[i*4];
                    a[i][1] = in[i*4+1];
                    a[i][2] = in[i*4+2];
                    a[i][3] = in[i*4+3];
                end
        end
    
    assign out = a[sel];
                    
        

endmodule
